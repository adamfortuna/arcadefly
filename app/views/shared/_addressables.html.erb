<%- 
  # Example:
  #  render :partial => 'shared/addressables', :object => arcades, :locals => {:small_map => true, :map_type => false, :id => "#{addressables.first.class.to_s.downcase}_map"}

  addressables.reject!{ |a| !a.has_address? }

  options ||= {}
  options.reverse_merge!({:small_map => true, :map_type => false, :id => "#{addressables.first.class.to_s.downcase}_map", :class => "map_medium map content-height"})

  map = GMap.new(options[:id])
  map.control_init(options)
  map.center_zoom_init([26,-80], 6)
  
  markers = {}
  addressables.each do |addressable|
    markers.merge!("'#{addressable.permalink}'" => GMarker.new([addressable.address.public_lat, addressable.address.public_lng],
                   :title => addressable.title,
                   :info_window => map_bubble_for(addressable)))
  end
  
  gmarker_group = GMarkerGroup.new(true, markers)
  map.overlay_global_init(gmarker_group,"#{addressables.first.class.to_s.downcase}_group")
  
  sorted_latitudes = addressables.collect(&:address).collect(&:public_lat).compact.sort
  sorted_longitudes = addressables.collect(&:address).collect(&:public_lng).compact.sort
  map.center_zoom_on_bounds_init([ [sorted_latitudes.first, sorted_longitudes.first], 
                                   [sorted_latitudes.last, sorted_longitudes.last]])
-%>

<% javascript_files do  %>
  <%= javascript_include_tag GMap.google_js_path %>
  <%= javascript_include_merged :addressables %>
<% end %>
 
<% javascript do %>
	<%= map.to_html(:no_script_tag => true) %>
	$('<%=options[:class].split(' ').first%>_loading').hide();
<% end %>

<%= image_tag "#{ASSET_HOST}/images/spinner.gif", :id => "#{options[:class].split(' ').first}_loading" %>
<%= map.div(:class => options[:class]) %>